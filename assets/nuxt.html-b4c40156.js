const e=JSON.parse('{"key":"v-6551629c","path":"/frontend/nuxt.html","title":"vite+nuxt+pinia+vueuse搞定前端SSR项目","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2023-09-21T00:00:00.000Z","category":["前端开发"],"order":1,"description":"vite+nuxt+pinia+vueuse搞定前端SSR项目 一、了解 SSR 在介绍 Nuxt3 之前，肯定要先介绍一波 服务端渲染，毕竟 Nuxt 就是一个基于 Vue.js 的服务端渲染应用框架； 什么是SSR 服务器端渲染（Server-Side Rendering）是指由服务端完成页面的 HTML 结构拼接的页面处理技术，发送到浏览器，然后为其绑定状态与事件，成为完全可交互页面的过程。 简单理解就是html是由服务端写出，可以动态改变页面内容，即所谓的动态页面。早年的 php、asp 、jsp 这些 Server page 都是 SSR 的。","head":[["meta",{"property":"og:url","content":"https://github.com/OnlY0226/OnlY0226.github.io/frontend/nuxt.html"}],["meta",{"property":"og:site_name","content":"Only"}],["meta",{"property":"og:title","content":"vite+nuxt+pinia+vueuse搞定前端SSR项目"}],["meta",{"property":"og:description","content":"vite+nuxt+pinia+vueuse搞定前端SSR项目 一、了解 SSR 在介绍 Nuxt3 之前，肯定要先介绍一波 服务端渲染，毕竟 Nuxt 就是一个基于 Vue.js 的服务端渲染应用框架； 什么是SSR 服务器端渲染（Server-Side Rendering）是指由服务端完成页面的 HTML 结构拼接的页面处理技术，发送到浏览器，然后为其绑定状态与事件，成为完全可交互页面的过程。 简单理解就是html是由服务端写出，可以动态改变页面内容，即所谓的动态页面。早年的 php、asp 、jsp 这些 Server page 都是 SSR 的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-21T03:09:29.000Z"}],["meta",{"property":"article:author","content":"OnlY"}],["meta",{"property":"article:published_time","content":"2023-09-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-21T03:09:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vite+nuxt+pinia+vueuse搞定前端SSR项目\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-21T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-21T03:09:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"OnlY\\"}]}"]]},"headers":[{"level":2,"title":"一、了解 SSR","slug":"一、了解-ssr","link":"#一、了解-ssr","children":[{"level":3,"title":"什么是SSR","slug":"什么是ssr","link":"#什么是ssr","children":[]},{"level":3,"title":"为什么使用SSR","slug":"为什么使用ssr","link":"#为什么使用ssr","children":[]}]},{"level":2,"title":"二、搭建项目","slug":"二、搭建项目","link":"#二、搭建项目","children":[{"level":3,"title":"初始化项目","slug":"初始化项目","link":"#初始化项目","children":[]},{"level":3,"title":"新建常用目录","slug":"新建常用目录","link":"#新建常用目录","children":[]},{"level":3,"title":"配置组件 components","slug":"配置组件-components","link":"#配置组件-components","children":[]},{"level":3,"title":"配置插件 plugins","slug":"配置插件-plugins","link":"#配置插件-plugins","children":[]},{"level":3,"title":"用 composables 灵活配置 hooks","slug":"用-composables-灵活配置-hooks","link":"#用-composables-灵活配置-hooks","children":[]},{"level":3,"title":"Nuxt 常用的 Hooks","slug":"nuxt-常用的-hooks","link":"#nuxt-常用的-hooks","children":[]},{"level":3,"title":"配置 pinia","slug":"配置-pinia","link":"#配置-pinia","children":[]},{"level":3,"title":"配置 vueuse","slug":"配置-vueuse","link":"#配置-vueuse","children":[]}]}],"git":{"createdTime":1695265769000,"updatedTime":1695265769000,"contributors":[{"name":"Oy","email":"OY.Ou@weltronics.com","commits":1}]},"readingTime":{"minutes":6.85,"words":2055},"filePathRelative":"frontend/nuxt.md","localizedDate":"2023年9月21日","excerpt":"<h1> vite+nuxt+pinia+vueuse搞定前端SSR项目</h1>\\n<h2> 一、了解 SSR</h2>\\n<p>在介绍 Nuxt3 之前，肯定要先介绍一波 服务端渲染，毕竟 Nuxt 就是一个基于 Vue.js 的服务端渲染应用框架；</p>\\n<h3> 什么是SSR</h3>\\n<p>服务器端渲染（Server-Side Rendering）是指由服务端完成页面的 HTML 结构拼接的页面处理技术，发送到浏览器，然后为其绑定状态与事件，成为完全可交互页面的过程。</p>\\n<p>简单理解就是html是由服务端写出，可以动态改变页面内容，即所谓的动态页面。早年的 php、asp 、jsp 这些 Server page 都是 SSR 的。</p>","autoDesc":true}');export{e as data};
